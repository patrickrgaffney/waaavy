{
  "name": "Wavvvy Color Scheme",
  "variables": {
    "red": "#EC5F67",
    "orange": "#F99157",
    "yellow": "#FAC863",
    "green": "#99C794",
    "teal": "#5FB3B3",
    "blue": "#6699CC",
    "purple": "#C594C5",
    "brown": "#AB7967",
    "white": "#CDD3DE",
    "black": "#1B2B34",
    "grey": "#65737E",
  },
  "globals": {
    "background": "#1B2B34",
    "foreground": "#CDD3DE",
    "caret": "#65737E",
    "line_highlight": "#4F5B66",
    "fold_marker": "#FAC863",
    "misspelling": "#EC5F67",
    "minimap_border": "#CDD3DE",
    "gutter": "#1B2B34",
    "gutter_foreground": "#65737E",
    "selection": "#4F5B66",
    "selection_foreground": "#D8DEE9",
    "selection_border": "#343D46",
    "selection_border_width": "1",
    "inactive_selection": "#4F5B66",
    "inactive_selection_foreground": "#CDD3DE",
    "selection_corner_style": "round",
    "selection_corner_radius": "4",
    "highlight": "#C0C5CE",
    "find_highlight": "#99C794",
    "find_highlight_foreground": "#1B2B34",
    "guide": "#4F5B66",
    "active_guide": "#4F5B66",
    "stack_guide": "#4F5B66",
    "bracket_options": "foreground",
    "brackets_foreground": "#5FB3B3",
    "bracket_contents_options": "underline",
    "bracket_contents_foreground": "#5FB3B3"
  },
  "rules": [
    {
      "name": "Language-Specific Keywords (reserved words)",
      "scope": "keyword.control",
      "foreground": "var(purple)"
    }, {
      "name": "Strings",
      "scope": "string",
      "foreground": "var(green)"
    }, {
      "name": "Built-in Types",
      "scope": "storage.type, storage.modifier",
      "foreground": "var(purple)",
    }, {
      "name": "Comments",
      "scope": "comment",
      "foreground": "var(grey)",
    }, {
      "name": "Function Names",
      "scope": "entity.name.function, variable.function, support.function",
      "foreground": "var(blue)",
    }, {
      "name": "Method Calls (innvocations of a method by name)",
      "scope": "meta.function-call.method variable.function, support.function.mutator",
      "foreground": "var(blue)",
    }, {
      "name": "Function Definition Parameters",
      "scope": "variable.parameter",
      "foreground": "var(orange)"
    }, {
      "name": "Groupped Punctuation (brackets, parentheses)",
      "scope": "punctuation.definition.group",
      "foreground": "var(white)",
    }, {
      "name": "Language Operators",
      "scope": "keyword.operator",
      "foreground": "var(teal)",
    }, {
      "name": "Language Constants",
      "scope": "constant.language, constant.numeric, support.type.object",
      "foreground": "var(orange)",
    }, {
      "name": "Numeric Constants",
      "scope": "constant.numeric",
      "foreground": "var(orange)",
    }, {
      "name": "Object Properties / Struct Members",
      "scope": "variable.other.member, variable.other.constant, variable.other.property.static",
      "foreground": "var(red)",
    }, {
      "name": "Label Names",
      "scope": "entity.name.label",
      "foreground": "var(teal)",
      "font_style": "italic",
    }, {
      "name": "Class Names / Struct Names / Custom Types",
      "scope": "entity.name.struct, entity.name.type, variable.other.class, entity.name.class, support.class.builtin, support.class.error",
      "foreground": "var(yellow)",
    }, {
      "name": "String (Constant) Placeholders",
      "scope": "string constant.other.placeholder",
      "foreground": "var(orange)",
    }, {
      "name": "String (Escape) Placeholders",
      "scope": "string constant.character.escape, keyword.other.substitution, punctuation.definition.template-expression",
      "foreground": "var(teal)",
    }, {
      "name": "JSX Tag",
      "scope": "meta.tag.jsx",
      "foreground": "var(red)",
    }, {
      "name": "JSX Prop",
      "scope": "meta.jsx.js entity.other.attribute-name.jsx",
      "foreground": "var(orange)",
    }, {
      "name": "JSX Punctuation",
      "scope": "meta.jsx.js punctuation.definition.tag",
      "foreground": "var(teal)",
    }, {
      "name": "super() Function",
      "scope": "variable.language.super",
      "foreground": "var(blue)",
      "font_style": "italic"
    }, {
      "name": "this Keyword",
      "scope": "variable.language.this",
      "foreground": "var(red)",
      "font_style": "italic",
    }, {
      "name": "HTML Punctuation",
      "scope": "text.html.basic punctuation.definition.tag, text.html.basic punctuation.separator.key-value, punctuation.definition.tag.begin.tsx, punctuation.definition.tag.end.tsx",
      "foreground": "var(teal)",
    }, {
      "name": "HTML DocType",
      "scope": "meta.tag.sgml.doctype.html entity.name.tag.doctype.html",
      "foreground": "var(yellow)",
    }, {
      "name": "HTML Tag",
      "scope": "meta.tag.sgml.doctype.html, text.html.basic entity.name.tag, entity.name.tag.tsx",
      "foreground": "var(red)",
    }, {
      "name": "HTML Attribute",
      "scope": "text.html.basic entity.other.attribute-name, meta.tag.attributes.tsx entity.other.attribute-name",
      "foreground": "var(orange)",
    }, {
      "name": "CSS Selector",
      "scope": "source.css meta.selector.css",
      "foreground": "var(blue)",
    }, {
      "name": "CSS Property Name",
      "scope": "source.css meta.property-name.css",
      "foreground": "var(green)",
    }, {
      "name": "CSS @-rule Property Name",
      "scope": "source.css support.type.property-name",
      "foreground": "var(green)",
    }, {
      "name": "CSS Constant Property Values",
      "scope": "source.css support.constant.property-value",
      "foreground": "var(yellow)",
    }, {
      "name": "CSS Constant Color Values",
      "scope": "source.css constant.other.color",
      "foreground": "var(teal)",
    }, {
      "name": "CSS Pseudo-Class",
      "scope": "source.css entity.other.pseudo-class",
      "foreground": "var(red)",
    }, {
      "name": "CSS !important",
      "scope": "source.css keyword.other.important",
      "foreground": "var(purple)",
    }, {
      "name": "CSS Animation Name",
      "scope": "source.css entity.other.animation-name",
      "foreground": "var(yellow)",
    }, {
      "name": "Typescript Built-in Types",
      "scope": "source.css entity.other.animation-name",
      "foreground": "var(yellow)",
    }, {
      "name": "Shell Variables",
      "scope": "variable.other.readwrite.shell, punctuation.definition.variable.shell",
      "foreground": "var(red)",
    }, {
      "name": "Shell Variable Punctuation",
      "scope": "punctuation.definition.variable.shell, punctuation.section.expansion.parameter.begin.shell, punctuation.section.expansion.parameter.end.shell, punctuation.section.parens.begin.shell, punctuation.section.parens.end.shell",
      "foreground": "var(teal)",
    }, {
      "name": "TOML Entity Tag Names",
      "scope": "entity.name.tag.toml",
      "foreground": "var(red)",
    }, {
      "name": "TOML Table Names",
      "scope": "entity.name.table.toml, entity.name.table.array.toml",
      "foreground": "var(blue)",
    }, {
      "name": "TOML Punctuation",
      "scope": "punctuation.definition.key-value.toml, punctuation.definition.table.begin.toml, punctuation.definition.table.end.toml, punctuation.definition.table.array.begin.toml, punctuation.definition.table.array.end.toml",
      "foreground": "var(teal)",
    }, {
      "name": "Markdown Headings",
      "scope": "markup.heading.1.markdown, markup.heading.2.markdown, markup.heading.markdown",
      "foreground": "var(green)",
    }, {
      "name": "Markdown Punctuation",
      "scope": "punctuation.definition.heading.begin.markdown, punctuation.definition.raw.code-fence.begin.markdown, punctuation.definition.raw.code-fence.end.markdown, punctuation.definition.raw.begin.markdown, punctuation.definition.raw.end.markdown, punctuation.definition.link.begin.markdown, punctuation.definition.link.end.markdown, punctuation.definition.metadata.end.markdown, punctuation.definition.metadata.begin.markdown, punctuation.definition.blockquote.markdown, punctuation.definition.list_item.markdown",
      "foreground": "var(teal)"
    }, {
      "name": "Markdown FCB Language Name",
      "scope": "constant.other.language-name.markdown",
      "foreground": "var(orange)"
    }, {
      "name": "Markdown Inline Code",
      "scope": "markup.raw.inline.markdown",
      "foreground": "var(yellow)"
    }, {
      "name": "Markdown Inline Link",
      "scope": "meta.link.inline.markdown",
      "foreground": "var(red)"
    }, {
      "name": "Markdown Inline Link Description",
      "scope": "meta.link.inline.description.markdown",
      "foreground": "var(blue)"
    }, {
      "name": "Markdown Inline Bold",
      "scope": "markup.bold.markdown",
      "foreground": "var(purple)",
      "font_style": "bold"
    }, {
      "name": "Markdown Inline Italic",
      "scope": "markup.italic.markdown",
      "foreground": "var(orange)",
      "font_style": "italic"
    }, {
      "name": "Markdown Blockquote",
      "scope": "markup.quote.markdown",
      "foreground": "var(brown)",
    }, {
      "name": "Java Keywords",
      "scope": "keyword.other.package.java, keyword.declaration.extends.java",
      "foreground": "var(purple)",
    }, {
      "name": "Java Namespace",
      "scope": "entity.name.namespace.java",
      "foreground": "var(green)",
    }, {
      "name": "Java Support Class",
      "scope": "support.class.java",
      "foreground": "var(orange)",
    }, {
      "name": "Java Punctuation",
      "scope": "punctuation.definition.generic.begin.java, punctuation.definition.generic.end.java",
      "foreground": "var(teal)",
    }, {
      "name": "Java Annotations",
      "scope": "variable.annotation.java, punctuation.definition.annotation.java",
      "foreground": "var(teal)",
    }, {
      "name": "Java this Keyword",
      "scope": "variable.language.java",
      "foreground": "var(red)",
    }, {
      "name": "Java Inheritied Class",
      "scope": "entity.other.inherited-class.java",
      "foreground": "var(green)",
    }, {
      "name": "Javascript Inherited Class",
      "scope": "entity.other.inherited-class.js",
      "foreground": "var(green)",
    }, {
      "name": "Javascript Constructor Calls",
      "scope": "meta.function-call.constructor.js variable.type.js",
      "foreground": "var(yellow)",
    }, {
      "name": "Javascript Object Literal Keys",
      "scope": "meta.object-literal.js meta.object-literal.key.js",
      "foreground": "var(green)",
    }, {
      "name": "Javascript Object Literal Separators",
      "scope": "meta.object-literal.js punctuation.separator.key-value.js",
      "foreground": "var(teal)",
    }, {
      "name": "CSS Combinator Punctuation",
      "scope": "punctuation.separator.combinator.css",
      "foreground": "var(teal)",
    }
  ]
}
